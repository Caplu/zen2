version: '3'

services:
  postgres:
    image: 'postgres:9.6'
    environment:
      POSTGRES_USER: ${DATABASE_USER:-zen}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD:-zen}
    expose:
        - 5432
#    ports:
#      - '5432:5432'
    healthcheck:
      test: ["CMD", "psql", "-U", "${DATABASE_USER:-zen}", "-c", "SELECT 1;", "template1"]
      interval: 1m30s
      timeout: 15s
      retries: 3
    volumes:
      - 'postgres:/var/lib/postgresql/data'

  redis:
    image: 'redis:4-alpine'
    command: redis-server --requirepass ${REDIS_PASSWORD:-redispassword}
    expose:
      - 6379
    healthcheck:
      test: ["CMD", "redis-cli", "info"]
      interval: 1m30s
      timeout: 15s
      retries: 3
#    ports:
#      - '6379:6379'
    volumes:
      - 'redis:/var/lib/redis/data'

  website:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - 'postgres'
      - 'redis'
#    expose:
#      - 3000
    ports:
      - '43000:3000'
    env_file:
      - 'docker-env'
    environment:
      DATABASE_NAME: zen
      DATABASE_USER: ${DATABASE_USER:-zen}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD:-zen}
      HEALTH_CHECK_USER: ${HEALTH_CHECK_USER:-lemmy}
      HEALTH_CHECK_PASSWORD: ${HEALTH_CHECK_PASSWORD:-is alive}
    healthcheck:
      test: ["CMD", "curl", "--silent", "--fail", "http://localhost:3000/alive"]
      interval: 1m30s
      timeout: 15s
      retries: 3

  worker:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - 'website'
    command: rails jobs:work
    env_file:
      - 'docker-env'
    environment:
      DATABASE_NAME: zen
      DATABASE_USER: ${DATABASE_USER:-zen}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD:-zen}

volumes:
  redis:
  postgres:
  bundle:
  node_modules:
