version: 2
jobs:
  build:
    working_directory: ~/zen
    parallelism: 2
    docker:
      - image: circleci/ruby:2.4.1-node-browsers
        environment:
          RAILS_ENV: test
          RACK_ENV: test
          DATABASE_URL: "postgres://circleci@localhost:5432/zen_test"

      - image: circleci/postgres:9.6.3-alpine
        environment:
          POSTGRES_USER: circleci
          POSTGRES_DB: zen_test

      - image: redis@sha256:54057dd7e125ca41afe526a877e8bd35ec2cdd33b9217e022ed37bdcf7d09673
    steps:
      - checkout

      - run:
          name: Install build-essential, libpq-dev
          command: 'sudo apt-get install -y build-essential libpq-dev'

      - run:
          name: Fix resolv.conf
          command: 'echo "nameserver 8.8.8.8" | sudo tee /etc/resolv.conf'

      - run:
          name: Set up hosts
          command: 'echo -e "\n127.0.0.1 atlas.127.0.0.1.xip.io zen.127.0.0.1.xip.io another.127.0.0.1.xip.io" | sudo tee -a /etc/hosts'

      - restore_cache:
          keys:
            - zen-bundle-{{ checksum "Gemfile.lock" }}
            - zen-bundle-

      - restore_cache:
          keys:
            - zen-yarn-{{ checksum "yarn.lock" }}
            - zen-yarn-

      - restore_cache:
          keys:
            - zen-assets-{{ epoch }}
            - zen-assets-

      - run:
          name: update-yarn
          command: 'sudo npm install -g yarn@latest'

      # Bundle install dependencies
      - run: bundle install --path vendor/bundle --jobs 3

      - save_cache:
          key: zen-bundle-{{ checksum "Gemfile.lock" }}
          paths:
              - vendor/bundle

      - run: yarn install

      - save_cache:
          key: zen-yarn-{{ checksum "yarn.lock" }}
          paths:
              - ~/.yarn-cache

      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m

      # Database setup
      - run: bundle exec rails db:schema:load

      # Precompile assets
      - run: bundle exec rails assets:precompile

      - save_cache:
          key: zen-assets-{{ epoch }}
          paths:
              - tmp/cache/assets
              - public/assets
              - public/packs
              - public/packs-test

      # Run mocha
      - type: shell
        command: |
          yarn test

      # Run rspec in parallel
      - type: shell
        command: |
          bundle exec rspec --profile 10 \
                            --format RspecJunitFormatter \
                            --out tmp/test-results/rspec.xml \
                            --format progress \
                            $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)

      # Save artifacts
      - store_artifacts:
          path: tmp/test-results
          destination: Test results

      - store_artifacts:
          path: tmp/reports
          destination: Screenshots

      - store_artifacts:
          path: log/
          destination: Logs
